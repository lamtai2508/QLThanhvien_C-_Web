@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

}
@model List<QLThanhvien_Web.Models.DeviceReturn>

<div class="container">
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2>Quản Lý</h2>
            <div class="user-info">
                <div class="user-name" style="text-align: center; font-size: 25px">Chào mừng tới thư quán</div>
            </div>
        </div>
        <div class="sidebar-menu">
            <div class="menu-item" onclick="window.location.href='/Member/Profile'">
                <i>👤</i> Thông tin cá nhân
            </div>
            <div class="menu-item" onclick="window.location.href='/Booking/Booking_device'">
                <i>📅</i> Đặt chỗ thiết bị
            </div>
            <div class="menu-item" onclick="window.location.href='/Booking/Booking_history'">
                <i>📚</i> Lịch sử đặt chỗ
            </div>
            <div class="menu-item active">
                <i>🔄</i> Trả thiết bị
            </div>
            <div class="menu-item" onclick="window.location.href='/Violation/Violations_history'">
                <i>⚠️</i> Lịch sử vi phạm
            </div>
            <div class="menu-item" onclick="window.location.href='/ChangePassword/ChangePassword'">
                <i>🔒</i> Đổi mật khẩu
            </div>
            <div class="menu-item" onclick="window.location.href='/Login/Login'">
                <i>🔚</i> Đăng xuất
            </div>
        </div>
    </div>
    <!-- Main Content -->
    <div class="main-content">
        <div class="header">
            <h1>Trả Thiết Bị</h1>
            <div class="search-bar">
                <input type="text" id="searchInput" placeholder="Tìm kiếm thiết bị...">
                <button onclick="searchDevices()">🔍</button>
            </div>
        </div>

        <!-- Borrowed Devices -->
        <div class="content-section">
            <div class="section-header">
                <h2>Thiết bị đang mượn</h2>
            </div>
            <div class="data-table">
                <table>
                    <thead>
                        <tr>
                            <th>Mã Thành viên</th>
                            <th>Mã thiết bị</th>
                            <th>Ngày mượn</th>
                            <th>Ngày trả</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="deviceTableBody">
                        <!-- Table rows will be populated by JavaScript -->
                    </tbody>
                </table>
                <div class="pagination">
                    <button id="prevBtn" onclick="prevPage()" disabled>Trước</button>
                    <span id="page-info">Trang 1 / 1</span>
                    <button id="nextBtn" onclick="nextPage()" disabled>Sau</button>
                </div>
            </div>
        </div>
        <!-- Return Form -->
            <div class="content-section">
                <div class="section-header">
                    <h2>Trả thiết bị</h2>
                </div>
                <form class="booking-form" id="returnForm">
                    <div class="form-group">
                        <label for="device">Thiết bị</label>
                        <select id="device" required>
                            <option value="">Chọn thiết bị</option>
                            <!-- Options will be populated by JavaScript -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="returnDate">Ngày trả</label>
                        <input type="datetime-local" id="returnDate" required>
                    </div>
                    <div class="form-group">
                        <label for="condition">Tình trạng thiết bị</label>
                        <textarea id="condition" placeholder="Mô tả tình trạng thiết bị khi trả..." required></textarea>
                    </div>
                    <div class="form-actions">
                        <button type="button" class="btn btn-secondary" onclick="resetForm()">Hủy</button>
                        <button type="submit" class="btn btn-primary">Xác nhận trả</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

<script>
    // Sample data - replace with your actual data
    const borrowedDevices = [
        
    @foreach (var dr in Model)
    {
        @: {
        @: "member_id": "@dr.member_id",
        @: "device_id": "@dr.device_id",
        @: "borrow_date": "@dr.borrow_date",
        @: "return_date": "@dr.return_date",
        @: "status": "@dr.status"
        @: },
    }    
    ];
    // Pagination variables
        let currentPage = 1;
        const itemsPerPage = 3;
        let filteredDevices = [...borrowedDevices];

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Set default return date to current date and time
            const now = new Date();
            const formattedDate = now.toISOString().slice(0, 16);
            document.getElementById('returnDate').value = formattedDate;
            
            // Populate the device dropdown
            populateDeviceDropdown();
            
            // Display the devices
            displayDevices();
            
            // Set up form submission
            document.getElementById('returnForm').addEventListener('submit', function(e) {
                e.preventDefault();
                handleReturnSubmit();
            });
        });
        // Function to populate the device dropdown
        function populateDeviceDropdown() {
            const deviceSelect = document.getElementById('device');
            deviceSelect.innerHTML = '<option value="">Chọn thiết bị</option>';
            
            borrowedDevices.forEach(device => {
                const option = document.createElement('option');
                option.value = device.device_id;
                option.textContent = `${device.device_id}`;
                deviceSelect.appendChild(option);
            });
        }

        // Function to display devices with pagination
        function displayDevices() {
            const tableBody = document.getElementById('deviceTableBody');
            tableBody.innerHTML = '';
            
            const totalPages = Math.ceil(filteredDevices.length / itemsPerPage);
            const startIndex = (currentPage - 1) * itemsPerPage;
            const paginatedDevices = filteredDevices.slice(startIndex, startIndex + itemsPerPage);

            
            paginatedDevices.forEach(device => {
                const row = document.createElement('tr');
                
                // Format dates for display
                    
                    const borrowedDateObj = new Date(device.borrow_date);
                    const borrowedDate = borrowedDateObj.toLocaleDateString('vi-VN', {
                        day: '2-digit',
                        month: '2-digit',
                        year: '2-digit'
                    });
                    const returnedDateObj = new Date(device.return_date);
                    const returnedDate = returnedDateObj.toLocaleString('vi-VN' , {
                        day: '2-digit',
                        month: '2-digit', 
                        year: '2-digit'
                    });
                
                row.innerHTML = `
                    <td>${device.member_id}</td>
                    <td>${device.device_id}</td>
                    <td>${borrowedDate}</td>
                    <td>${returnedDate}</td>
                    <td><span class="status pending">${device.status}</span></td>
                    <td><button class="btn btn-primary" onclick="selectDevice('${device.device_id}')">Trả ngay</button></td>
                `;
                
                tableBody.appendChild(row);
            });
            // Update pagination controls
            document.getElementById('page-info').textContent = `Trang ${currentPage} / ${totalPages || 1}`;
            document.getElementById('prevBtn').disabled = currentPage === 1;
            document.getElementById('nextBtn').disabled = currentPage === totalPages || totalPages === 0;
        }

        // Function to handle device search
            function searchDevices() {
            const searchQuery = document.getElementById('searchInput').value.toLowerCase();

            filteredDevices = borrowedDevices.filter(device =>
                device.device_id.toLowerCase().includes(searchQuery) ||
                device.member_id.toLowerCase().includes(searchQuery)
            );

            currentPage = 1;
            displayDevices();
        }

        // Function to go to previous page
        function prevPage() {
            if (currentPage > 1) {
                currentPage--;
                displayDevices();
            }
        }

        // Function to go to next page
        function nextPage() {
            const totalPages = Math.ceil(filteredDevices.length / itemsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                displayDevices();
            }
        }

        // Function to select a device for return
        function selectDevice(deviceId) {
            document.getElementById('device').value = deviceId;
            // Scroll to the form
            document.querySelector('.booking-form').scrollIntoView({ behavior: 'smooth' });
        }

        // Function to handle form submission
        function handleReturnSubmit() {

            const deviceId = document.getElementById('device').value;
            // get time-now
            const now = new date();
            const returnDate = formatDateToDatetimeLocal(now); // Format the current date
            const condition = document.getElementById('condition').value;

            if (!deviceId || !returnDate || !condition) {
                alert('Vui lòng điền đầy đủ thông tin!');
                return;
            }

            // Find the device for the alert
            const device = borrowedDevices.find(d => d.device_id === deviceId);
            const deviceLabel = device ? `${device.device_id} - ${device.member_id}` : deviceId;

            alert(`Đã trả thiết bị ${deviceLabel} thành công!`);

            // Reset the form
            resetForm();

            // Remove returned device from the list (demo only)
            const index = borrowedDevices.findIndex(d => d.device_id === deviceId);
            if (index !== -1) {
                borrowedDevices.splice(index, 1);
                filteredDevices = [...borrowedDevices];
                displayDevices();
                populateDeviceDropdown();
            }
        }

        // Function to reset the form
        function resetForm() {
            document.getElementById('device').value = '';
            document.getElementById('condition').value = '';

            const now = new Date();
            const formattedDate = now.toISOString().slice(0, 16);
            document.getElementById('returnDate').value = formattedDate;
        }

        function formatDateToDatetimeLocal(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        const hours = String(date.getHours()).padStart(2, '0');
        const minutes = String(date.getMinutes()).padStart(2, '0');

        return `${year}-${month}-${day}T${hours}:${minutes}`;
    }

    </script>
    